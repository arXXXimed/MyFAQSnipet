

Функция  СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.4.4.92");
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиПечатнаяФорма();
	ПараметрыРегистрации.Версия = "1.0";
	ПараметрыРегистрации.Назначение.Добавить("Документ.ЗаказПокупателя");
	ПараметрыРегистрации.Наименование ="Печать Актов (кухниЮнайтед)";
	ПараметрыРегистрации.БезопасныйРежим = Ложь;
	ПараметрыРегистрации.Информация = "Печатная форма для переопределения печати актов для нашеей фирмы";
	//ПараметрыРегистарции.ОпределитьНастройкиФормы Используется для внешних отчетов подключенных к общей форме
	//ПараметрыРегистрации.Разрешения  - Массив
	//ПараметрыРегистрации.Команды - ТаблицаЗначениий
	
	НоваяКомандаПечати = ПараметрыРегистрации.Команды.Добавить();
	НоваяКомандаПечати.Представление = НСтр("ru = 'Акт выполненых работ '; en = 'Certificate of completion'"); 
	НоваяКомандаПечати.Идентификатор = "ПФ_MXL_АктВыполненныхРабот,ПФ_MXL_АктПриемкиПередачи_Кухня";
	НоваяКомандаПечати.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	НоваяКомандаПечати.ПоказыватьОповещение = Истина; 
	НоваяКомандаПечати.Модификатор =  "ПечатьMXL";
	НоваяКомандаПечати.Скрыть = Ложь;
	НоваяКомандаПечати.ЗаменяемыеКоманды = Неопределено;
	
	НоваяКомандаПечати = ПараметрыРегистрации.Команды.Добавить();
	НоваяКомандаПечати.Представление = НСтр("ru = 'Акт приемки-передачи '; en = 'Certificate of completion'"); 
	НоваяКомандаПечати.Идентификатор = "ПФ_MXL_АктПриемкиПередачи_Техника";
	НоваяКомандаПечати.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	НоваяКомандаПечати.ПоказыватьОповещение = Истина; 
	НоваяКомандаПечати.Модификатор =  "ПечатьMXL";
	НоваяКомандаПечати.Скрыть = Ложь;
	НоваяКомандаПечати.ЗаменяемыеКоманды = Неопределено;
	
	Возврат ПараметрыРегистрации;
	
	
КонецФункции

//Обработчик печати.
//
// Параметры:
//   МассивОбъектов - Массив - Ссылки на объекты, которые нужно распечатать.
//   КоллекцияПечатныхФорм - ТаблицаЗначений - Информация о табличных документах.
//       Используется для передачи в параметрах функции УправлениеПечатью.СведенияОПечатнойФорме().
//   ОбъектыПечати - СписокЗначений - Соответствие между объектами и именами областей в табличных документах.
//       Используется для передачи в параметрах процедуры УправлениеПечатью.ЗадатьОбластьПечатиДокумента().
//   ПараметрыВывода - Структура - Дополнительные параметры сформированных табличных документов.
//       * ДополнительнаяОбработкаСсылка - СправочникСсылка.ДополнительныеОтчетыИОбработки - Ссылка обработки.
//           Может использоваться для чтения параметров обработки.
//           Пример см. в комментарии к функции ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы().
//
// Пример:
//  	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "<ИдентификаторПечатнойФормы>");
//  	Если ПечатнаяФорма <> Неопределено Тогда
//  		ТабличныйДокумент = Новый ТабличныйДокумент;
//  		ТабличныйДокумент.КлючПараметровПечати = "<КлючСохраненияПараметровПечатнойФормы>";
//  		Для Каждого Ссылка Из МассивОбъектов Цикл
//  			Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
//  				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
//  			КонецЕсли;
//  			НачалоОбласти = ТабличныйДокумент.ВысотаТаблицы + 1;
//  			// ... код по формированию табличного документа ...
//  			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НачалоОбласти, ОбъектыПечати, Ссылка);
//  		КонецЦикла;
//  		ПечатнаяФорма.ТабличныйДокумент = ТабличныйДокумент;
//  	КонецЕсли;
//
Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	ДанныеДляЗаполнения = СформироватьДанныеДляЗаполнения(МассивОбъектов);
	
	Для Каждого ПечатнаяФорма из КоллекцияПечатныхФорм Цикл
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		ПечатнаяФорма.ИмяМакета,
		ПечатнаяФорма.СинонимМакета,
		СформироватьПечатнуюФорму(ДанныеДляЗаполнения, ОбъектыПечати,ПечатнаяФорма));
	КонецЦикла;
	
	
КонецПроцедуры

Функция СформироватьПечатнуюФорму(МассивОбъектов, ОбъектыПечати,ПечатнаяФорма)
	Возврат ПечатьАктаИПримеки(МассивОбъектов, ОбъектыПечати,ПечатнаяФорма);
	//Пока возврат
	
	//Если ПечатнаяФорма.ИмяМакета = "ПФ_MXL_АктВыполненныхРабот" Тогда
	//	Возврат ПечатьАктВыполненныхРабот(МассивОбъектов,ОбъектыПечати,ПечатнаяФорма);
	//ИначеЕсли ПечатнаяФорма.ИмяМакета = "ПФ_MXL_АктВыполненныхРабот" Тогда		
	//	Возврат Печать2(МассивОбъектов,ОбъектыПечати,ПечатнаяФорма);
	//КонецЕсли;
	
КонецФункции


Функция  ПечатьАктаИПримеки(МассивОбъектов, ОбъектыПечати,ПечатнаяФорма)
	// Создаем табличный документ и устанавливаем имя параметров печати.
	Макет = ПолучитьМакет(ПечатнаяФорма.ИмяМакета);
	МакетМетаданные = ЭтотОбъект.Метаданные().Макеты.найти(ПечатнаяФорма.ИмяМакета);
	Если МакетМетаданные <> Неопределено Тогда
		ПечатнаяФорма.СинонимМакета = МакетМетаданные.Синоним;
	КонецЕсли;
	Макет = ПолучитьМакет(ПечатнаяФорма.ИмяМакета);
	ОбластьПечати = Макет.ПолучитьОбласть("Шапка");
	
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "КлючпараметровПечати_"+ПечатнаяФорма.ИмяМакета;
	Для Каждого ОбъектДляПечати из МассивОбъектов Цикл
		ПервыйДокумент = Истина;
		Если Не ПервыйДокумент Тогда
			// Все документы нужно выводить на разных страницах.
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		//......................
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати комплектов документов.
		ОбластьПечати.Параметры.Заполнить(ОбъектДляПечати);
		ТабличныйДокумент.Вывести(ОбластьПечати);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
		НомерСтрокиНачало, ОбъектыПечати,ОбъектДляПечати);
	КонецЦикла;
	Возврат ТабличныйДокумент;
КонецФункции


Функция СформироватьДанныеДляЗаполнения(МассивОбъектов)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Ссылка КАК Документ,
	               |	ЗаказПокупателя.Дата КАК ДатаДокумента,
	               |	ЗаказПокупателя.Номер КАК НомерДокумента,
	               |	ЗаказПокупателя.Договор.ДатаДоговора КАК ДатаДоговора,
	               |	ЗаказПокупателя.Договор.НомерДоговора КАК НомерДоговора,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	Ответственный.ФизЛицо.Наименование Как ПродавецФИО,
	               |	Подписи.Должность КАК ПродавецДолжность,
	               |	Подписи.ДействуетНаОсновании КАК Доверенность ,
				   |	""__________"" Как Заказчик,""__________"" Как Продавец
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Подписи КАК Подписи
	               |		ПО (Подписи.ФизическоеЛицо = ЗаказПокупателя.Ответственный.Физлицо)
	               |			И (НЕ Подписи.ПравоОтозвано)
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка В(&МассивСсылок)
	               |ИТОГИ ПО
	               |	Документ";
	
	Запрос.УстановитьПараметр("МассивСсылок",МассивОбъектов);
	РезультатЗапроса = Запрос.Выполнить();
	СтрокаКолонок = "" ;
	Для Каждого КолонкаРез из РезультатЗапроса.Колонки Цикл
		СтрокаКолонок = СтрокаКолонок + КолонкаРез.Имя  + ", ";
	КонецЦикла;
	СтрокаКолонок = Лев(СтрокаКолонок,СтрДлина(СтрокаКолонок)-2);
		
	
	ВыборкаСсылки = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	МассивДанных = Новый Массив;
	Пока ВыборкаСсылки.Следующий() Цикл
		СтруктураДокумента  = Новый Структура(СтрокаКолонок);
		МассивДанных.Добавить(СтруктураДокумента);
		ВыборкаДетальные = ВыборкаСсылки.Выбрать();
		Пока ВыборкаДетальные.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(СтруктураДокумента,ВыборкаДетальные);
			
			СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ВыборкаДетальные.Организация, ВыборкаДетальные.ДатаДокумента);
			 			
			СведенияОбКонтрагенте = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ВыборкаДетальные.Контрагент, ВыборкаДетальные.ДатаДокумента);
			
			
			СтруктураДокумента.Вставить("ПредставлениеПродавца",СведенияОбОрганизации.ПолноеНаименование);
			СтруктураДокумента.Вставить("ПредствалениеПокупателя",СведенияОбКонтрагенте.ПолноеНаименование);
			УправлениеНебольшойФирмойСервер.ФамилияИнициалыПоНаименованию(СтруктураДокумента.Продавец, ВыборкаДетальные.ПродавецФИО);
			СтруктураДокумента.ДатаДокумента = Формат(СтруктураДокумента.ДатаДокумента,"ДФ='''""''dd''""'' MMMM yyyy"" г.""'");
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат МассивДанных;
КонецФункции
   



/////////////////////////
///Функции, которые было лень искать аналог в БСП
///////////////////////

// функция просто получает номер без префикса
// Используется для
Функция ПолучитьСтроковыйНомерБезПрефиксов(Номер) Экспорт
	
	НомерБезПрефиксов = "";
	//Сч = СтрДлина(Номер);
	
	Для Сч = 1 По СтрДлина(Номер) Цикл
		
		Символ = Сред(Номер, Сч, 1);
		
		Если (Символ >= "0" И Символ <= "9") Тогда
			
			НомерБезПрефиксов = НомерБезПрефиксов + Символ;
			
		Иначе
			
			Возврат НомерБезПрефиксов;
			
		КонецЕсли;
		
		
	КонецЦикла;
	
	Возврат НомерБезПрефиксов;
	
КонецФункции